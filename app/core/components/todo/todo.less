@charset "UTF-8";

@import url(https://fonts.googleapis.com/css?family=Open+Sans:400,600,700,300italic,300,400italic);

/* vars */

@white:           #fff;
@light_red:       #ff727e;
@grey:            #888888;
@grey_light:      #f5f5f5;
@light_blue_01:   #A5FBFC;
@light_blue_06:   #00c1bc;
@black:           #000;
@lime:            #a6dd3c;

/* form validation color */
@input_invalid:   #a94442;
@input_valid:     #42A948;

/* mixins */
.Clickable() {
  cursor: pointer;
}

.Writable() {
  cursor: text;
}

.inputPlaceholder(@rules) {
  &::-webkit-input-placeholder {
    @rules();
  }
  &::-moz-placeholder {
    @rules();
  }
  &:-moz-placeholder {
    @rules();
  }
  &:-ms-input-placeholder {
    @rules();
  }
  &::-input-placeholder {
    @rules();
  }
}

.transition (@transition) {
	-webkit-transition: @transition;  
	-moz-transition:    @transition;
	-ms-transition:     @transition; 
	-o-transition:      @transition;  
}

.transform (@args) {
	-webkit-transform:  @args;  
	-ms-transform:      @args;
	-transform:         @args; 
	-o-transform:       @args;  
}

.kerframes (@name, @args) {
	@-moz-keyframes @name { @args(); }
	@-webkit-keyframes @name { @args(); }
	@keyframes @name { @args(); }
}

.animation (@args) {
	-o-animation:       @args;  
	-webkit-animation:  @args;
	-moz-animation:     @args; 
	-animation:         @args;  
}

/* checkbox */
[type="checkbox"]{
  &:not(:checked),&:checked{
    position: absolute;
    left: -9999px;
  }
  &:not(:checked) + label,
  &:checked + label{
    position: relative;
    padding-left: 40px;
    cursor: pointer;
  }
  /* checkbox aspect */
  &:not(:checked) + label:before,
  &:checked + label:before {
    content: '';
    position: absolute;
    left:0;
    top: 3px;
    width: 30px;
    height: 30px;
    border: 1px solid #aaa;
  }
  &:not(:checked) + label:after,
  &:checked + label:after {
    font-family: icomoon;
    content: "\2713";
    position: absolute;
    top: 6px;
    left: 5px;
    font-size: 25px;
    line-height: 1;
    color: @black;
    transition: all .2s;
  }
  &:not(:checked) + label:after {
    opacity: 0;
    transform: scale(0);
  }
  &:checked + label:after {
    opacity: 1;
    transform: scale(1);
  }
  &:disabled:not(:checked) + label:before,
  &:disabled:checked + label:before {
    box-shadow: none;
  }
  &:disabled:checked + label:after {
    color: #999;
  }
  &:disabled + label {
    color: #aaa;
  }
  &:checked:focus + label:before,
  &:not(:checked):focus + label:before {
    border: 1px dotted blue;
  }
}

/* modals */
.modal-content {
  overflow: hidden;
  button {
    &.btn-lime {
      color: @white;
      background-color: @lime;
    }
  }
  .modal-header-bar {
    padding: 0 2rem;
    border-top-left-radius: 4px;
    border-top-right-radius: 4px;
    height: 4.4rem;
    text-align: left;
    background-color: @light_red;
    .icon-x {
      float: right;
      color: @white;
      line-height: 4.4rem;
      &:before {
        content: "\1F5D9";
      }
    }
    .modal-title{
      line-height: 4.4rem;
      font-size: 1.4rem;
      color: @white;
    }
  }
  .modal-footer{
    padding: 2.5rem 2rem;
    border-top: 1px solid @grey;
    background-color: @grey_light;
    border-bottom-left-radius: 6px;
    border-bottom-right-radius: 6px;
  }
  .modal-inner-content {
    padding: 2.5rem;
    textarea {
      resize: none;
      box-sizing: content-box;
      width: 100%;
    }
  }
  .modal-close{
    cursor: pointer;
  }
}

.image-preloader-spinner {
  height: 100%;
  min-height: 100px;
  background-repeat: no-repeat;
  background-position: center center;
  background-image: url('/images/img-preloader.gif');
}

div[contenteditable], div.contenteditable {
  .Clickable();
  &.editable {
    .Writable();
  }
  ul {
    list-style: none;
    margin-top: 2rem;
    padding: 0px;
    li {
      box-shadow: 5px 5px 5px @grey;
      margin-bottom: 1.5rem;
      padding: 10px;
      border-radius: 0.5rem;
      font-size: 25px;
      text-align: left;
    }
  }
}

/* compoment styles*/
todo {
  .container-fluid {
    .container {
      @media only screen and (min-width: 767px) {
        width: 760px;
      }
    }
    .todo-container {
      text-align: center;
      margin-top: 20rem;
      margin-bottom: 1rem;
      h1 {
        color: @light_red;
        font-size: 3.5em;
      }
    }
  }
  todo-form {
    form#todos {
      input[type="text"] {
        .inputPlaceholder({
          font-style: italic;
          font-weight: 600;
          color: @light_red;
        });
      }
      label {
        margin-top: 0.8rem;
        padding-top: 0.5em;
      }
    }
    .col-xs-7 {
      padding: 0px;
    }
    .help-block {
      background-color: @input_invalid;
      color: @white;
      padding: 10px;
      border-radius: 0.5rem;
      span {
        color: @white;
      } 
    }
    .todoListName {
      padding: 25px 25px 25px 10px;
      &.ng-invalid {
        border-left: 5px solid @input_invalid;
      }
      &.ng-valid[required] {
        border-left: 5px solid @input_valid;
      }
    }
    button {
      &.btn.btn-default {
        padding: 15px;
        width: 100%;
      }
    }
  }
  todo-filters {
    .filter-by {
      margin: 2rem 0;
      div {
        text-align: center;
        cursor: pointer;
        .transition(0.5s);
        &.active {
          padding: 10px;
          border: 1px solid;
        }
      }
    }
  }
  todo-lists {
    .todo-items {
      list-style: none;
      margin-top: 2rem;
      padding: 0px;
      li {
        box-shadow: 5px 5px 5px @grey;
        margin-bottom: 1.5rem;
        padding: 15px;
        border-radius: 0.5rem;
        font-size: 25px;
        &.editable {
          background-color: @light_blue_01;
        }
        label {
          &.done {
            text-decoration: line-through;
          }
        }
        &:hover {
          background-color: @grey_light;
          .Clickable();
        }
        i {
          float: right;
          margin-top: 1rem;
          &:not(:first-child) {
            margin-left: 10px;
          }
        }
        &.ng-enter, &.ng-leave {
          .transition(0.4s all);
        }
        &.ng-leave.ng-leave-active, &.ng-enter {
          opacity: 0;
          height: 0px;
        }
        &.ng-enter.ng-enter-active, &.ng-leave {
          opacity: 1;
          height: 70px;
        }
      }
      .todo-task {
        &.on-removing {
          .transition(0.5s);
          .transform(translate(-100px));
          opacity: 0.5;
          &.removed {
            .animation(removed-item-animation 2s cubic-bezier(.55,-0.04,.91,.94) forwards);
            transform-origin: 0% 100%;
          }
        }
      }
    }
  }
}

.kerframes(removed-item-animation, {
  0% {
    opacity: 1;
    transform: rotateZ(0) translate(-100px);
  }

  20% {
    opacity: 1;
    transform: rotateZ(140deg);
  }

    40% {
    opacity: 1;
    transform: rotateZ(60deg);
  }

  60% {
    opacity: 1;
    transform: rotateZ(110deg);
  }

  70% {
    opacity: 1;
    transform: rotateZ(90deg) translateX(0);
  }

  90% {
    opacity: 1;
    transform: rotateZ(90deg) translateX(600px);
  }

  100% {
    opacity: 0;
    transform: rotateZ(90deg) translateX(600px);
  }
});